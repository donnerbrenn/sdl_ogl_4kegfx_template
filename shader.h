/* File generated with Shader Minifier 1.1.5
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_H_
# define SHADER_H_
# define VAR_COLOR "m"
# define VAR_RUNTIME "v"

const char *shader_frag =
 "#version 460\n"
 "uniform float v[2];"
 "float f=v[0],y=10000;"
 "out vec3 m;"
 "vec3 n(vec3 m,vec3 v)"
 "{"
   "float y=cos(v.x),f=sin(v.x),x=cos(v.y),z=sin(v.y),n=cos(v.z),s=sin(v.z);"
   "mat3 r=mat3(vec3(1,0,0),vec3(0,y,-f),vec3(0,f,y));"
   "r*=mat3(vec3(x,0,z),vec3(0,1,0),vec3(-z,0,x));"
   "return r*mat3(vec3(n,-s,0),vec3(s,n,0),vec3(0,0,1))*m;"
 "}"
 "float n(vec3 v,vec3 m,float y)"
 "{"
   "vec3 f=abs(v)-m;"
   "return length(max(f,0.))+min(max(f.x,max(f.y,f.z)),0.)-y;"
 "}"
 "float x(vec3 v,vec2 f)"
 "{"
   "return min(min(n(v,f.xyy,0.),n(v,f.yxy,0.)),n(v,f.yyx,0.));"
 "}"
 "float n(vec3 v)"
 "{"
   "float y=n(n(v+vec3(0,2.5,0),vec3(1.,0.,0.)),vec3(40,16,.1),0.);"
   "v=n(v,vec3(f*.5,f*.5,.5));"
   "float m=x(v,vec2(4.5,.98)),s=n(v,vec3(1.),.25);"
   "m=max(s,-m);"
   "m=min(m,n(v,vec3(0),.3));"
   "m=mix(s,m,sin(f*2)*.5+.5);"
   "return min(m,y);"
 "}"
 "vec3 x(vec3 v)"
 "{"
   "vec2 m=vec2(1./y,0);"
   "return normalize(vec3(n(v+m.xyy)-n(v-m.xyy),n(v+m.yxy)-n(v-m.yxy),n(v+m.yyx)-n(v-m.yyx)));"
 "}"
 "float x(vec3 v,vec3 m,float y)"
 "{"
   "return(dot(v,normalize(m))*.5+.5)*y;"
 "}"
 "float n(vec3 v,vec3 m,vec3 f,float y)"
 "{"
   "vec3 x=reflect(normalize(m),v);"
   "return pow(max(dot(f,x),0),128)*y;"
 "}"
 "float s(vec3 v,vec3 y)"
 "{"
   "float m=1-abs(length(v-y))/100.;"
   "return pow(m,32.)*1.5;"
 "}"
 "float n(vec3 v,vec3 m,float s,float f,float x)"
 "{"
   "float r=1.,z=1e+20;"
   "for(float i=s;i<f;)"
     "{"
       "float c=n(v+m*i);"
       "if(c<1./y)"
         "return 0;"
       "float p=c*c/(2.*z),l=sqrt(c*c-p*p);"
       "r=min(r,x*l/max(0.,i-p));"
       "z=c;"
       "i+=c;"
     "}"
   "return r;"
 "}"
 "void main()"
 "{"
   "vec2 f=gl_FragCoord.xy/vec2(v[1])-vec2(.5,.25);"
   "vec3 c=vec3(f*5,-10.),z=c,r=normalize(vec3(f,1.));"
   "bool p=false;"
   "float l;"
   "for(int i=0;i<500&&l<30.;i++)"
     "{"
       "l=length(c-z);"
       "float e=n(z);"
       "if(e<1./y)"
         "{"
           "p=true;"
           "break;"
         "}"
       "z+=r*e;"
     "}"
   "vec3 i=x(z);"
   "if(p)"
     "{"
       "vec3 e,d=vec3(.1,.25,-.2),t=vec3(-.1,.15,-.25),o=vec3(-1,.5,.25);"
       "e+=vec3(s(z,d)*x(i,d,.75)+n(i,d,r,.45));"
       "e+=s(z,t)*x(i,t,.525)+n(i,t,r,.35);"
       "e+=s(z,o)*x(i,o,.225)+n(i,o,r,.725);"
       "m=e*vec3(.1,.5,.1);"
       "vec3 a=c+l*r;"
       "m=mix(vec3(0.),m,n(a,normalize(d),.01,length(l*r),100.)*.25+.75);"
     "}"
   "m*=mix(m,vec3(1.,1.,1.),1-exp(-.1*pow(l,256.)));"
   "m-=l*.0125;"
 "}";

#endif // SHADER_H_
